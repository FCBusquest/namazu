#!/bin/bash
set -e # exit on an error
# set -x

function INFO(){
    echo -e "\e[104m\e[97m[INFO]\e[49m\e[39m $@"
}

########## Set up ##########
cd $(dirname $0)
[ -z $GOPATH ] && (echo "GOPATH is not set"; exit 1)
[[ $GOPATH = $(pwd)* ]] && (echo "GOPATH(${GOPATH}) should be *outside* of $(pwd). otherwise some tools like IntelliJ can get stuck."; exit 1)
export GOBIN=$GOPATH/bin
export PATH=$GOBIN:$PATH
mkdir -p $GOPATH/src/github.com/osrg
rm -f $GOPATH/src/github.com/osrg/earthquake
INFO "Linking $(pwd) to $GOPATH/src/github.com/osrg/earthquake"
ln -sf $(pwd) $GOPATH/src/github.com/osrg/earthquake

########## ProtocolBuffers ##########
INFO "Installing protoc to $GOBIN"
go get github.com/golang/protobuf/proto
go get github.com/golang/protobuf/protoc-gen-go
INFO "Generating PB files"
protoc --go_out=earthquake/util/pb -Iinspector inspector/inspector_message.proto

########## Go ##########
INFO "Fetching Earthquake deps"
go get -t github.com/osrg/earthquake/earthquake
go get -t github.com/osrg/earthquake/earthquake-container

for f in earthquake earthquake-container; do
    INFO "Building $f"
    go build -o bin/$f github.com/osrg/earthquake/$f
done

EXAMPLES="example/template/mypolicy.go example/yarn/4301-reproduce/mypolicy.go"
for f in $EXAMPLES; do
    INFO "Building ${f}"
    (
	cd $(dirname $f)
	go build -o $(basename -s .go $f) $(basename $f)
    )
done

########## Python ##########
#INFO "Checking whether pyearthquake deps are installed"
#INFO "Running \`autopep8 -r --diff\` for pyearthquake"
#autopep8 -r --diff pyearthquake
#INFO "Testing pyearthquake"

########## Java ##########
INFO "Building Java Inspector (bin/earthquake-inspector.jar)"
( cd inspector/java/base; mvn package > /dev/null ) && cp -f inspector/java/base/target/earthquake-inspector.jar bin

INFO "Building Java Analyzer (bin/earthquake-analyzer.jar)"
( cd analyzer/java/base; mvn package > /dev/null ) && cp -f analyzer/java/base/target/earthquake-analyzer.jar bin

########## C ##########
#INFO "Building C Inspector" #FIXME: still broken?
